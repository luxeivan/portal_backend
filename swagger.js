const swaggerJsdoc = require("swagger-jsdoc");
const swaggerUi = require("swagger-ui-express");

const options = {
  definition: {
    openapi: "3.0.0",
    info: {
      title: "МосОблЭнерго API",
      version: "1.0.0",
      description: `
        Как пользоваться Swagger-документацией, или как заставить API делать то, что ты хочешь? 
        Да, конечно, тебе это пригодится, иначе зачем ты тут вообще?

        1. **Запусти этот цирк с конями, то есть Swagger UI**: Вбей в браузере '/api-docs' после того, как запустишь сервер. Это так просто, что даже Джерри бы справился.

        2. **Разворачивай маршруты, как свои амбиции**: Нашел маршрут? Щёлкай по нему, и он раскроется, как твоя беспомощность перед реальностью. Только аккуратнее, а то ещё что-нибудь сломаешь.

        3. **Проверь параметры, чтобы потом не ныть**: Серьёзно, это важно. Тело запроса, параметры, заголовки — посмотри на это так же внимательно, как я на очередную глупость, которую ты вытворяешь.

        4. **Нажми на "Try it out" и покажи, на что ты способен**: Ну давай, попробуй. Введи данные и нажми кнопку. Посмотрим, получится ли у тебя что-то или ты опять проколешься.

        5. **Execute — это когда пора**: Как только соберешься с мыслями, нажми "Execute". Подожди ответа от вселенной (или от API). Если что-то пойдёт не так — не удивляйся, это нормально для тебя.

        6. **Разберись с ответом, гений**: Swagger тебе покажет, что вернул API. Статус-код, тело ответа — вот оно, в твоих руках. Если всё прошло гладко — ну что ж, может, не всё так плохо, как я думал. Если нет — возвращайся к пункту 3 и посмотри, где ты снова напортачил.

        7. **Повтори этот процесс до бесконечности**: Если что-то сработало, переходи к следующему маршруту. Не сдавайся, до тех пор, пока не станешь мастером API или пока не надоест. 

        Ах да, и если что-то не работает — это, наверное, не моя вина, а твоя, так что давай, соберись и сделай всё как надо. Удачи, она тебе понадобится.
      `,
    },
    tags: [
      {
        name: "Auth",
        description: "Маршруты для авторизации пользователей",
      },
      {
        name: "Formonec",
        description: "Маршруты для работы с формами в 1С",
      },
      {
        name: "Registration",
        description: "Маршруты для регистрации и подтверждения пользователей",
      },
      {
        name: "SendMail",
        description: "Маршруты для отправки кода на email",
      },
      {
        name: "Services",
        description: "Маршруты для получения информации об услугах и их элементах",
      },
      {
        name: "DaData",
        description: "Маршруты для работы с API DaData",
      }
    ],
  },
  apis: ["./routers/*.js", "./routers/getDaData/*.js"], // путь к файлам с описанием API
};

const specs = swaggerJsdoc(options);

module.exports = (app) => {
  app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(specs));
};

// const swaggerJsdoc = require('swagger-jsdoc');
// const swaggerUi = require('swagger-ui-express');

// const options = {
//   definition: {
//     openapi: '3.0.0',
//     info: {
//       title: 'API МосОблЭнерго',
//       version: '1.0.0',
//     },
//   },
//   apis: ['./routers/*.js'], // путь к файлам с описанием API
// };

// const specs = swaggerJsdoc(options);

// module.exports = (app) => {
//   app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
// };
