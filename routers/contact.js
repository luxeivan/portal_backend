const express = require("express");
const axios = require("axios");
require("dotenv").config();

const router = express.Router();

const SERVER_1C = process.env.SERVER_1C;
const server1cHttpService = process.env.SERVER_1C_HTTP_SERVICE;
const server1c_auth = process.env.SERVER_1C_AUTHORIZATION;

// –ê–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º –æ–ø–æ–≤–µ—â–∞—Ç—å –±–æ—Ç–∞
// (–µ—Å–ª–∏ –±–æ—Ç –∏ –±—ç–∫–µ–Ω–¥ –Ω–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ http://127.0.0.1:3001/notifyError)
const botNotifyUrl =
  process.env.BOT_NOTIFY_URL || "http://127.0.0.1:3001/notifyError";

// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ 1–°
const headers = {
  Authorization: server1c_auth,
};

/**
 * @swagger
 * /api/contacts:
 *   get:
 *     summary: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ç–æ
 *     description: |
 *       –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞
 *       **InformationRegister_portalContactInformation** –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–µ
 *       —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ **Catalog_–†–∞–π–æ–Ω—ã–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö–°–µ—Ç–µ–π–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ–§–∞–π–ª—ã**.
 *     tags: ["üåê Contact"]
 *     responses:
 *       200:
 *         description: –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   object:
 *                     type: string
 *                     description: GUID –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
 *                     example: "e93f2105-bffe-11ee-907a-00505601574a"
 *                   description:
 *                     type: string
 *                     example: "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ —ç–ª–µ–∫—Ç—Ä–æ—Å–µ—Ç–∏"
 *                   photos:
 *                     type: array
 *                     items:
 *                       type: object
 *                       properties:
 *                         –ü—É—Ç—å–ö–§–∞–π–ª—É:
 *                           type: string
 *                           example: "images/contacts/123.jpg"
 *                         –ü–æ–ª–Ω—ã–π–ü—É—Ç—åWindows:
 *                           type: string
 *                           example: "\\\\srv\\share\\images\\contacts\\123.jpg"
 *       500:
 *         description: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ 1–°
 */

router.get("/", async (req, res) => {
  try {
    // 1) –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ—É
    const contactInfoResponse = await axios.get(
      `${server1cHttpService}/contacts`,
      // `${SERVER_1C}/InformationRegister_portalContactInformation?$format=json&$orderby=lineNum`,
      { headers }
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞
    if (contactInfoResponse.status !== 200) {
      throw new Error(
        `–û–∂–∏–¥–∞–ª–∏ —Å—Ç–∞—Ç—É—Å 200, –∞ –ø–æ–ª—É—á–∏–ª–∏ ${contactInfoResponse.status}`
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    const contactInfo = contactInfoResponse.data?.data;
    // if (!Array.isArray(contactInfo)) {
    //   throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç 1–° (–Ω–µ—Ç –º–∞—Å—Å–∏–≤–∞ contactInfo)");
    // }
    if (contactInfo.length === 0) {
      throw new Error(
        "1–° –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —á—Ç–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º"
      );
    }

    // 2) –¢—è–Ω–µ–º —Ñ–æ—Ç–∫–∏
    const photosResponse = await axios.get(
      `${SERVER_1C}/Catalog_–†–∞–π–æ–Ω—ã–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö–°–µ—Ç–µ–π–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ–§–∞–π–ª—ã?$format=json&$expand=–¢–æ–º&$select=Ref_Key,Description,–í–ª–∞–¥–µ–ª–µ—Ü–§–∞–π–ª–∞_Key,–ü—É—Ç—å–ö–§–∞–π–ª—É,–†–µ–∫–≤–∏–∑–∏—Ç–î–æ–ø–£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è,–¢–æ–º,–¢–∏–ø–•—Ä–∞–Ω–µ–Ω–∏—è–§–∞–π–ª–∞,–¢–æ–º/–ü–æ–ª–Ω—ã–π–ü—É—Ç—åWindows,–§–∞–π–ª–•—Ä–∞–Ω–∏–ª–∏—â–µ&$filter=DeletionMark%20eq%20false`,
      { headers }
    );

    if (photosResponse.status !== 200) {
      throw new Error(
        `–û–∂–∏–¥–∞–ª–∏ —Å—Ç–∞—Ç—É—Å 200 –ø–æ —Ñ–æ—Ç–∫–∞–º, –∞ –ø–æ–ª—É—á–∏–ª–∏ ${photosResponse.status}`
      );
    }

    const photos = photosResponse.data?.value;
    if (!Array.isArray(photos)) {
      throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç 1–° (–Ω–µ—Ç –º–∞—Å—Å–∏–≤–∞ photos)");
    }

    // 3) –°–∫–ª–µ–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const combinedData = contactInfo.map((contact) => {
      // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–æ—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
      const matchedPhotos = photos.filter(
        (photo) => photo.–í–ª–∞–¥–µ–ª–µ—Ü–§–∞–π–ª–∞_Key === contact.object
      );
      return {
        ...contact,
        photos: matchedPhotos.map((photo) => ({
          –ü—É—Ç—å–ö–§–∞–π–ª—É: photo.–ü—É—Ç—å–ö–§–∞–π–ª—É,
          –ü–æ–ª–Ω—ã–π–ü—É—Ç—åWindows: photo.–¢–æ–º?.–ü–æ–ª–Ω—ã–π–ü—É—Ç—åWindows,
        })),
      };
    });

    // 4) –û—Ç–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç
    res.status(200).json(combinedData);
  } catch (error) {
    // 5) –õ–æ–≤–∏–º –ª—é–±—É—é –æ—à–∏–±–∫—É (–≤–∫–ª—é—á–∞—è –Ω–∞—à–∏ throw new Error)
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ 1C:", error);

    // 6) –°–æ–æ–±—â–∞–µ–º —Ñ—Ä–æ–Ω—Ç—É, —á—Ç–æ —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ 1C" });

    // 7) –®–ª—ë–º –≤ –±–æ—Ç
    if (botNotifyUrl) {
      try {
        const errorDetails = {
          message: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ 1C: ${error.message}`,
          error: {
            config: {
              url: error?.config?.url,
              method: error?.config?.method,
            },
            response: {
              status: error?.response?.status,
              statusText: error?.response?.statusText,
              data: error?.response?.data,
            },
            code: error?.code,
            message: error?.message || error?.response?.data?.message,
          },
        };
        await axios.post(botNotifyUrl, errorDetails);
      } catch (notifyErr) {
        console.error("–ù–µ —Å–º–æ–≥–ª–∏ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å –±–æ—Ç–∞:", notifyErr);
      }
    }
  }
});

module.exports = router;
