const express = require("express");
const sendMessageToGigachat = require("../services/gigaChat");
const gigaChatRouter = express.Router();


/**
 * @swagger
 * /api/gigachat:
 *   post:
 *     summary: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ GigaChat
 *     description: |
 *       –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Å–µ—Ä–≤–∏—Å—É `sendMessageToGigachat`
 *       –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏.
 *     tags: ["üåê GigaChat"]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required: [message]
 *             properties:
 *               message:
 *                 type: string
 *                 example: –ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?
 *     responses:
 *       200:
 *         description: –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 status: { type: string, example: –û–ö }
 *                 answer: { type: string, example: –í—Å—ë –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! }
 *       500:
 *         description: –û—à–∏–±–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å GigaChat
 */

gigaChatRouter.post("/", async (req, res) => {
  const message = req.body.message;
  try {
    const answer = await sendMessageToGigachat(message);
    res.json({ status: "–û–ö", answer });
  } catch (error) {
    res.json({ status: "error", error: error.message });
  }
});

module.exports = gigaChatRouter;
